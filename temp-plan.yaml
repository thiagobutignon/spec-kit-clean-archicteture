version: 3.0.0
metadata:
  title: User Registration Domain Layer - Clean Architecture
  description: TDD template for user registration feature following the master
    template rules.
  source: TODO_DOMAIN_TEMPLATE.yaml
  lastUpdated: 2025-09-16
structure:
  basePath: src/features/user-registration/domain
  folders:
    - errors
    - use-cases
    - test
layer_rules:
  can_import_from_domain:
    - Data Layer - Implements the use case interfaces
    - Presentation Layer - Uses domain types and calls use cases
    - Infrastructure Layer - May use domain types for adapters
    - Main/Factory Layer - Wires everything together, knows all layers
    - Test Files - Can import domain types and interfaces for testing
  cannot_import_from_domain:
    - External Libraries - Should never know about domain
    - Node Modules - Third-party code should not depend on domain
  domain_cannot_import_from:
    - Any other layer - Domain must be completely independent
    - Data Layer - No implementation details
    - Presentation Layer - No UI concerns
    - Infrastructure Layer - No external dependencies
    - Main Layer - No dependency injection logic
    - External Libraries - No third-party dependencies
domain_rules:
  allowed:
    - Simple type definitions (Input/Output types)
    - Use case interfaces (contracts only)
    - Domain-specific error classes
    - Test mock functions
  forbidden:
    - Framework dependencies (React, Next.js, Express)
    - External libraries (axios, fetch, database clients)
    - Implementation details of any kind
    - UI components
    - HTTP/Database/File system operations
    - Environment variables
    - Console.log or any I/O operations
    - Value objects
    - Entities
    - Business rules or business logic
    - Validation logic
    - Calculations or computations
    - Any behavior beyond type definitions and interfaces
use_case_rules:
  should:
    - Define only interfaces/contracts, not implementations
    - Have EXACTLY ONE responsibility (one business operation)
    - Do ONE thing and ONE thing only (never multiple operations)
    - Return domain types or primitives
    - Be named with verbs (CreateUser, AuthenticateUser, etc.)
    - Be framework agnostic
  should_not:
    - Contain implementation logic
    - Know about HTTP, databases, or external services
    - Import from data, presentation, or infrastructure layers
    - Have side effects
    - Execute multiple operations (e.g., CreateUserAndSendEmail is wrong)
error_rules:
  should:
    - Extend the native Error class
    - Have descriptive names ending with Error
    - Contain meaningful error messages
    - Represent business rule violations
    - Be thrown when domain invariants are violated
  should_not:
    - Contain HTTP status codes
    - Include technical/implementation details
    - Expose sensitive information
    - Import external dependencies
test_helper_rules:
  should:
    - Create mock/stub implementations of use cases
    - Generate fake test data
    - Be pure functions that return consistent data
    - Help reduce test boilerplate
    - Use ONLY Vitest (Jest is prohibited)
  should_not:
    - Make real API calls or database queries
    - Depend on external services
    - Contain test assertions (those belong in test files)
    - Have side effects or maintain state
    - Use Jest (use Vitest instead)
steps:
  - id: create-structure
    type: folder
    description: Create domain folder structure
    status: SUCCESS
    rlhf_score: null
    execution_log: |
      Completed successfully at 2025-09-16T19:27:14.966Z.

      --- SCRIPT OUTPUT ---
      ✅ Verifying folder structure...
      ✅ Folders exist.
      📦 Staging changes...
      💾 Creating commit...
      [main f6d7d29] feat(user-registration): create domain folder structure
       7 files changed, 2276 insertions(+), 27 deletions(-)
       create mode 100644 temp-plan.yaml
       create mode 100644 user-registration-implementation.yaml
       create mode 100644 user-registration-structured.json
      ✅ Successfully committed
    references:
      - type: internal_guideline
        source: ARCHITECTURE.md
        description: Following the standard feature-based domain structure.
    action:
      create_folders:
        basePath: src/features/user-registration/domain
        folders:
          - errors
          - use-cases
          - test
    validation_script: >
      echo "✅ Verifying folder structure..."

      # Adiciona uma verificação explícita para falhar se as pastas não
      existirem

      if [ ! -d "src/features/user-registration/domain/errors" ] || \
         [ ! -d "src/features/user-registration/domain/use-cases" ] || \
         [ ! -d "src/features/user-registration/domain/test" ]; then
        echo "❌ ERROR: One or more domain folders were not created."
        exit 1
      fi

      echo "✅ Folders exist."


      echo "📦 Staging changes..."

      git add .


      echo "💾 Creating commit..."

      git commit -m "feat(user-registration): create domain folder structure"

      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi

      echo "✅ Successfully committed"
  - id: create-use-case-register-user
    type: create_file
    description: Create RegisterUser use case interface
    status: SUCCESS
    rlhf_score: null
    execution_log: |
      Completed successfully at 2025-09-16T19:27:16.612Z.

      --- SCRIPT OUTPUT ---
      🔍 Running lint check...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ eslint .

      /Users/thiagobutignon/dev/spec-kit-clean-archicteture/coverage/block-navigation.js
        1:1  warning  Unused eslint-disable directive (no problems were reported)

      ✖ 1 problem (0 errors, 1 warning)
        0 errors and 1 warning potentially fixable with the `--fix` option.

      Done in 0.87s.
      ✅ Lint passed
      🧪 Running tests with coverage...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ vitest --passWithNoTests --coverage

       RUN  v3.2.4 /Users/thiagobutignon/dev/spec-kit-clean-archicteture
            Coverage enabled with v8

      No test files found, exiting with code 0

      include: **/*.{test,spec}.?(c|m)[jt]s?(x)
      exclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*

       % Coverage report from v8
      -------------------|---------|----------|---------|---------|-------------------
      File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
      -------------------|---------|----------|---------|---------|-------------------
      All files          |       0 |    71.42 |   71.42 |       0 |                   
       ...n-archicteture |       0 |    66.66 |   66.66 |       0 |                   
        execute-steps.ts |       0 |      100 |     100 |       0 | 3-265             
        logger.ts        |       0 |        0 |       0 |       0 | 1-46              
        ...ementation.ts |       0 |      100 |     100 |       0 | 3-293             
       .../domain/errors |       0 |      100 |     100 |       0 |                   
        ...-not-found.ts |       0 |      100 |     100 |       0 | 5-10              
       ...le/domain/test |       0 |        0 |       0 |       0 |                   
        ...e-use-case.ts |       0 |        0 |       0 |       0 | 1-30              
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        ...er-profile.ts |       0 |        0 |       0 |       0 |                   
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        register-user.ts |       0 |        0 |       0 |       0 |                   
      -------------------|---------|----------|---------|---------|-------------------
      Done in 0.54s.
      ✅ Tests passed
      📦 Staging changes...
      💾 Creating commit...
      [main b964583] feat(user-registration): add register-user use case
       18 files changed, 824 insertions(+), 342 deletions(-)
       create mode 100644 coverage/spec-kit-clean-archicteture/src/features/user-registration/domain/use-cases/index.html
       create mode 100644 coverage/spec-kit-clean-archicteture/src/features/user-registration/domain/use-cases/register-user.ts.html
       create mode 100644 src/features/user-registration/domain/use-cases/register-user.ts
      ✅ Successfully committed
    references:
      - type: internal_code_analysis
        source: serena
        tool: read
        query: get-user-profile.ts
        description: Following existing use case pattern from user-profile feature
      - type: external_pattern
        source: context7
        query: user registration authentication
        url: https://github.com/donnemartin/system-design-primer
        description: Account creation REST API pattern with user credentials
    path: src/features/user-registration/domain/use-cases/register-user.ts
    template: |
      /**
       * Input parameters for RegisterUserUseCase
       */
      export type RegisterUserInput = {
        email: string
        password: string
        firstName: string
        lastName: string
      }

      /**
       * Output type for RegisterUserUseCase
       */
      export type RegisterUserOutput = {
        id: string
        email: string
        firstName: string
        lastName: string
        createdAt: Date
      }

      /**
       * RegisterUserUseCase interface
       * @description Registers a new user in the system
       */
      export interface RegisterUserUseCase {
        /**
         * Execute the register user operation
         * @param input - The input parameters
         * @returns Promise with the operation output
         */
        execute: (input: RegisterUserInput) => Promise<RegisterUserOutput>
      }
    validation_script: >
      # AI-NOTE: This script is immutable. Only the commit message placeholder
      is replaced.

      echo "🔍 Running lint check..."

      yarn lint

      if [ $? -ne 0 ]; then
        echo "❌ LINT FAILED - Attempting auto-fix..."
        yarn lint --fix
        if [ $? -ne 0 ]; then
          echo "❌ AUTO-FIX FAILED - Manual intervention required"
          echo "📋 Run 'yarn lint' to see remaining errors"
          exit 1
        fi
        echo "✅ Lint errors auto-fixed, validating again..."
        yarn lint
        if [ $? -ne 0 ]; then
          echo "❌ LINT STILL FAILING - Manual fixes needed"
          exit 1
        fi
      fi

      echo "✅ Lint passed"


      echo "🧪 Running tests with coverage..."

      yarn test --coverage

      if [ $? -ne 0 ]; then
        echo "❌ TESTS FAILED - Running specific test to identify issue..."
        yarn test --run --reporter=verbose
        echo "❌ Tests must be fixed manually"
        echo "📋 Check the test output above for details"
        exit 1
      fi

      echo "✅ Tests passed"


      echo "📦 Staging changes..."

      git add .


      echo "💾 Creating commit..."

      git commit -m "feat(user-registration): add register-user use case"

      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi

      echo "✅ Successfully committed"
  - id: create-use-case-send-welcome-email
    type: create_file
    description: Create SendWelcomeEmail use case interface
    status: SUCCESS
    rlhf_score: null
    execution_log: |
      Completed successfully at 2025-09-16T19:27:17.808Z.

      --- SCRIPT OUTPUT ---
      🔍 Running lint check...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ eslint .

      /Users/thiagobutignon/dev/spec-kit-clean-archicteture/coverage/block-navigation.js
        1:1  warning  Unused eslint-disable directive (no problems were reported)

      ✖ 1 problem (0 errors, 1 warning)
        0 errors and 1 warning potentially fixable with the `--fix` option.

      Done in 0.52s.
      ✅ Lint passed
      🧪 Running tests with coverage...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ vitest --passWithNoTests --coverage

       RUN  v3.2.4 /Users/thiagobutignon/dev/spec-kit-clean-archicteture
            Coverage enabled with v8

      No test files found, exiting with code 0

      include: **/*.{test,spec}.?(c|m)[jt]s?(x)
      exclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*

       % Coverage report from v8
      -------------------|---------|----------|---------|---------|-------------------
      File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
      -------------------|---------|----------|---------|---------|-------------------
      All files          |       0 |       75 |      75 |       0 |                   
       ...n-archicteture |       0 |    66.66 |   66.66 |       0 |                   
        execute-steps.ts |       0 |      100 |     100 |       0 | 3-265             
        logger.ts        |       0 |        0 |       0 |       0 | 1-46              
        ...ementation.ts |       0 |      100 |     100 |       0 | 3-293             
       .../domain/errors |       0 |      100 |     100 |       0 |                   
        ...-not-found.ts |       0 |      100 |     100 |       0 | 5-10              
       ...le/domain/test |       0 |        0 |       0 |       0 |                   
        ...e-use-case.ts |       0 |        0 |       0 |       0 | 1-30              
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        ...er-profile.ts |       0 |        0 |       0 |       0 |                   
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        register-user.ts |       0 |        0 |       0 |       0 |                   
        ...come-email.ts |       0 |        0 |       0 |       0 |                   
      -------------------|---------|----------|---------|---------|-------------------
      Done in 0.47s.
      ✅ Tests passed
      📦 Staging changes...
      💾 Creating commit...
      [main 2c4d4f5] feat(user-registration): add send-welcome-email use case
       19 files changed, 360 insertions(+), 27 deletions(-)
       create mode 100644 coverage/spec-kit-clean-archicteture/src/features/user-registration/domain/use-cases/send-welcome-email.ts.html
       create mode 100644 src/features/user-registration/domain/use-cases/send-welcome-email.ts
      ✅ Successfully committed
    references:
      - type: external_pattern
        source: context7
        query: email notification domain driven design
        url: https://github.com/mehdihadeli/awesome-software-architecture
        description: Event-driven email notification pattern in DDD
    path: src/features/user-registration/domain/use-cases/send-welcome-email.ts
    template: >
      /**
       * Input parameters for SendWelcomeEmailUseCase
       */
      export type SendWelcomeEmailInput = {
        userId: string
        email: string
        firstName: string
      }


      /**
       * Output type for SendWelcomeEmailUseCase
       */
      export type SendWelcomeEmailOutput = {
        emailId: string
        sentAt: Date
        status: 'sent' | 'queued' | 'failed'
      }


      /**
       * SendWelcomeEmailUseCase interface
       * @description Sends a welcome email to newly registered users
       */
      export interface SendWelcomeEmailUseCase {
        /**
         * Execute the send welcome email operation
         * @param input - The input parameters
         * @returns Promise with the operation output
         */
        execute: (input: SendWelcomeEmailInput) => Promise<SendWelcomeEmailOutput>
      }
    validation_script: |
      echo "🔍 Running lint check..."
      yarn lint
      if [ $? -ne 0 ]; then
        echo "❌ LINT FAILED - Attempting auto-fix..."
        yarn lint --fix
        if [ $? -ne 0 ]; then
          echo "❌ AUTO-FIX FAILED - Manual intervention required"
          echo "📋 Run 'yarn lint' to see remaining errors"
          exit 1
        fi
        echo "✅ Lint errors auto-fixed, validating again..."
        yarn lint
        if [ $? -ne 0 ]; then
          echo "❌ LINT STILL FAILING - Manual fixes needed"
          exit 1
        fi
      fi
      echo "✅ Lint passed"

      echo "🧪 Running tests with coverage..."
      yarn test --coverage
      if [ $? -ne 0 ]; then
        echo "❌ TESTS FAILED - Running specific test to identify issue..."
        yarn test --run --reporter=verbose
        echo "❌ Tests must be fixed manually"
        echo "📋 Check the test output above for details"
        exit 1
      fi
      echo "✅ Tests passed"

      echo "📦 Staging changes..."
      git add .

      echo "💾 Creating commit..."
      git commit -m "feat(user-registration): add send-welcome-email use case"
      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi
      echo "✅ Successfully committed"
  - id: create-error-user-already-exists
    type: create_file
    description: Create user-already-exists domain error
    status: SUCCESS
    rlhf_score: null
    execution_log: |
      Completed successfully at 2025-09-16T19:27:19.004Z.

      --- SCRIPT OUTPUT ---
      🔍 Running lint check...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ eslint .

      /Users/thiagobutignon/dev/spec-kit-clean-archicteture/coverage/block-navigation.js
        1:1  warning  Unused eslint-disable directive (no problems were reported)

      ✖ 1 problem (0 errors, 1 warning)
        0 errors and 1 warning potentially fixable with the `--fix` option.

      Done in 0.50s.
      ✅ Lint passed
      🧪 Running tests with coverage...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ vitest --passWithNoTests --coverage

       RUN  v3.2.4 /Users/thiagobutignon/dev/spec-kit-clean-archicteture
            Coverage enabled with v8

      No test files found, exiting with code 0

      include: **/*.{test,spec}.?(c|m)[jt]s?(x)
      exclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*

       % Coverage report from v8
      -------------------|---------|----------|---------|---------|-------------------
      File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
      -------------------|---------|----------|---------|---------|-------------------
      All files          |       0 |    77.77 |   77.77 |       0 |                   
       ...n-archicteture |       0 |    66.66 |   66.66 |       0 |                   
        execute-steps.ts |       0 |      100 |     100 |       0 | 3-265             
        logger.ts        |       0 |        0 |       0 |       0 | 1-46              
        ...ementation.ts |       0 |      100 |     100 |       0 | 3-293             
       .../domain/errors |       0 |      100 |     100 |       0 |                   
        ...-not-found.ts |       0 |      100 |     100 |       0 | 5-10              
       ...le/domain/test |       0 |        0 |       0 |       0 |                   
        ...e-use-case.ts |       0 |        0 |       0 |       0 | 1-30              
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        ...er-profile.ts |       0 |        0 |       0 |       0 |                   
       .../domain/errors |       0 |      100 |     100 |       0 |                   
        ...ady-exists.ts |       0 |      100 |     100 |       0 | 5-10              
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        register-user.ts |       0 |        0 |       0 |       0 |                   
        ...come-email.ts |       0 |        0 |       0 |       0 |                   
      -------------------|---------|----------|---------|---------|-------------------
      Done in 0.49s.
      ✅ Tests passed
      📦 Staging changes...
      💾 Creating commit...
      [main aba977e] feat(user-registration): add user-already-exists domain error
       21 files changed, 404 insertions(+), 25 deletions(-)
       create mode 100644 coverage/spec-kit-clean-archicteture/src/features/user-registration/domain/errors/index.html
       create mode 100644 coverage/spec-kit-clean-archicteture/src/features/user-registration/domain/errors/user-already-exists.ts.html
       create mode 100644 src/features/user-registration/domain/errors/user-already-exists.ts
      ✅ Successfully committed
    references:
      - type: internal_code_analysis
        source: serena
        tool: read
        query: user-not-found.ts
        description: Following existing error pattern from user-profile feature
    path: src/features/user-registration/domain/errors/user-already-exists.ts
    template: |
      /**
       * Error thrown when attempting to register a user that already exists
       * @extends Error
       */
      export class UserAlreadyExistsError extends Error {
        constructor() {
          super('A user with this email already exists')
          this.name = 'UserAlreadyExistsError'
        }
      }
    validation_script: >
      echo "🔍 Running lint check..."

      yarn lint

      if [ $? -ne 0 ]; then
        echo "❌ LINT FAILED - Attempting auto-fix..."
        yarn lint --fix
        if [ $? -ne 0 ]; then
          echo "❌ AUTO-FIX FAILED - Manual intervention required"
          echo "📋 Run 'yarn lint' to see remaining errors"
          exit 1
        fi
        echo "✅ Lint errors auto-fixed, validating again..."
        yarn lint
        if [ $? -ne 0 ]; then
          echo "❌ LINT STILL FAILING - Manual fixes needed"
          exit 1
        fi
      fi

      echo "✅ Lint passed"


      echo "🧪 Running tests with coverage..."

      yarn test --coverage

      if [ $? -ne 0 ]; then
        echo "❌ TESTS FAILED - Running specific test to identify issue..."
        yarn test --run --reporter=verbose
        echo "❌ Tests must be fixed manually"
        echo "📋 Check the test output above for details"
        exit 1
      fi

      echo "✅ Tests passed"


      echo "📦 Staging changes..."

      git add .


      echo "💾 Creating commit..."

      git commit -m "feat(user-registration): add user-already-exists domain
      error"

      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi

      echo "✅ Successfully committed"
  - id: create-error-invalid-email
    type: create_file
    description: Create invalid-email domain error
    status: SUCCESS
    rlhf_score: null
    execution_log: |
      Completed successfully at 2025-09-16T19:27:20.232Z.

      --- SCRIPT OUTPUT ---
      🔍 Running lint check...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ eslint .

      /Users/thiagobutignon/dev/spec-kit-clean-archicteture/coverage/block-navigation.js
        1:1  warning  Unused eslint-disable directive (no problems were reported)

      ✖ 1 problem (0 errors, 1 warning)
        0 errors and 1 warning potentially fixable with the `--fix` option.

      Done in 0.52s.
      ✅ Lint passed
      🧪 Running tests with coverage...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ vitest --passWithNoTests --coverage

       RUN  v3.2.4 /Users/thiagobutignon/dev/spec-kit-clean-archicteture
            Coverage enabled with v8

      No test files found, exiting with code 0

      include: **/*.{test,spec}.?(c|m)[jt]s?(x)
      exclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*

       % Coverage report from v8
      -------------------|---------|----------|---------|---------|-------------------
      File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
      -------------------|---------|----------|---------|---------|-------------------
      All files          |       0 |       80 |      80 |       0 |                   
       ...n-archicteture |       0 |    66.66 |   66.66 |       0 |                   
        execute-steps.ts |       0 |      100 |     100 |       0 | 3-265             
        logger.ts        |       0 |        0 |       0 |       0 | 1-46              
        ...ementation.ts |       0 |      100 |     100 |       0 | 3-293             
       .../domain/errors |       0 |      100 |     100 |       0 |                   
        ...-not-found.ts |       0 |      100 |     100 |       0 | 5-10              
       ...le/domain/test |       0 |        0 |       0 |       0 |                   
        ...e-use-case.ts |       0 |        0 |       0 |       0 | 1-30              
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        ...er-profile.ts |       0 |        0 |       0 |       0 |                   
       .../domain/errors |       0 |      100 |     100 |       0 |                   
        invalid-email.ts |       0 |      100 |     100 |       0 | 5-10              
        ...ady-exists.ts |       0 |      100 |     100 |       0 | 5-10              
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        register-user.ts |       0 |        0 |       0 |       0 |                   
        ...come-email.ts |       0 |        0 |       0 |       0 |                   
      -------------------|---------|----------|---------|---------|-------------------
      Done in 0.49s.
      ✅ Tests passed
      📦 Staging changes...
      💾 Creating commit...
      [main 2b65a23] feat(user-registration): add invalid-email domain error
       22 files changed, 302 insertions(+), 36 deletions(-)
       create mode 100644 coverage/spec-kit-clean-archicteture/src/features/user-registration/domain/errors/invalid-email.ts.html
       create mode 100644 src/features/user-registration/domain/errors/invalid-email.ts
      ✅ Successfully committed
    references:
      - type: external_pattern
        source: context7
        query: email validation domain primitives
        url: https://github.com/mehdihadeli/awesome-software-architecture
        description: Domain primitive validation pattern for email addresses
    path: src/features/user-registration/domain/errors/invalid-email.ts
    template: |
      /**
       * Error thrown when an invalid email format is provided
       * @extends Error
       */
      export class InvalidEmailError extends Error {
        constructor() {
          super('The provided email address is not valid')
          this.name = 'InvalidEmailError'
        }
      }
    validation_script: |
      echo "🔍 Running lint check..."
      yarn lint
      if [ $? -ne 0 ]; then
        echo "❌ LINT FAILED - Attempting auto-fix..."
        yarn lint --fix
        if [ $? -ne 0 ]; then
          echo "❌ AUTO-FIX FAILED - Manual intervention required"
          echo "📋 Run 'yarn lint' to see remaining errors"
          exit 1
        fi
        echo "✅ Lint errors auto-fixed, validating again..."
        yarn lint
        if [ $? -ne 0 ]; then
          echo "❌ LINT STILL FAILING - Manual fixes needed"
          exit 1
        fi
      fi
      echo "✅ Lint passed"

      echo "🧪 Running tests with coverage..."
      yarn test --coverage
      if [ $? -ne 0 ]; then
        echo "❌ TESTS FAILED - Running specific test to identify issue..."
        yarn test --run --reporter=verbose
        echo "❌ Tests must be fixed manually"
        echo "📋 Check the test output above for details"
        exit 1
      fi
      echo "✅ Tests passed"

      echo "📦 Staging changes..."
      git add .

      echo "💾 Creating commit..."
      git commit -m "feat(user-registration): add invalid-email domain error"
      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi
      echo "✅ Successfully committed"
  - id: create-error-weak-password
    type: create_file
    description: Create weak-password domain error
    status: SUCCESS
    rlhf_score: null
    execution_log: |
      Completed successfully at 2025-09-16T19:27:21.497Z.

      --- SCRIPT OUTPUT ---
      🔍 Running lint check...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ eslint .

      /Users/thiagobutignon/dev/spec-kit-clean-archicteture/coverage/block-navigation.js
        1:1  warning  Unused eslint-disable directive (no problems were reported)

      ✖ 1 problem (0 errors, 1 warning)
        0 errors and 1 warning potentially fixable with the `--fix` option.

      Done in 0.55s.
      ✅ Lint passed
      🧪 Running tests with coverage...
      yarn run v1.22.22
      warning ../../package.json: No license field
      $ vitest --passWithNoTests --coverage

       RUN  v3.2.4 /Users/thiagobutignon/dev/spec-kit-clean-archicteture
            Coverage enabled with v8

      No test files found, exiting with code 0

      include: **/*.{test,spec}.?(c|m)[jt]s?(x)
      exclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*

       % Coverage report from v8
      -------------------|---------|----------|---------|---------|-------------------
      File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
      -------------------|---------|----------|---------|---------|-------------------
      All files          |       0 |    81.81 |   81.81 |       0 |                   
       ...n-archicteture |       0 |    66.66 |   66.66 |       0 |                   
        execute-steps.ts |       0 |      100 |     100 |       0 | 3-265             
        logger.ts        |       0 |        0 |       0 |       0 | 1-46              
        ...ementation.ts |       0 |      100 |     100 |       0 | 3-293             
       .../domain/errors |       0 |      100 |     100 |       0 |                   
        ...-not-found.ts |       0 |      100 |     100 |       0 | 5-10              
       ...le/domain/test |       0 |        0 |       0 |       0 |                   
        ...e-use-case.ts |       0 |        0 |       0 |       0 | 1-30              
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        ...er-profile.ts |       0 |        0 |       0 |       0 |                   
       .../domain/errors |       0 |      100 |     100 |       0 |                   
        invalid-email.ts |       0 |      100 |     100 |       0 | 5-10              
        ...ady-exists.ts |       0 |      100 |     100 |       0 | 5-10              
        weak-password.ts |       0 |      100 |     100 |       0 | 5-10              
       ...main/use-cases |       0 |        0 |       0 |       0 |                   
        register-user.ts |       0 |        0 |       0 |       0 |                   
        ...come-email.ts |       0 |        0 |       0 |       0 |                   
      -------------------|---------|----------|---------|---------|-------------------
      Done in 0.49s.
      ✅ Tests passed
      📦 Staging changes...
      💾 Creating commit...
      [main e947c57] feat(user-registration): add weak-password domain error
       23 files changed, 302 insertions(+), 37 deletions(-)
       create mode 100644 coverage/spec-kit-clean-archicteture/src/features/user-registration/domain/errors/weak-password.ts.html
       create mode 100644 src/features/user-registration/domain/errors/weak-password.ts
      ✅ Successfully committed
    references:
      - type: external_pattern
        source: context7
        query: security password validation
        url: https://github.com/donnemartin/system-design-primer
        description: Security best practices for password validation
    path: src/features/user-registration/domain/errors/weak-password.ts
    template: >
      /**
       * Error thrown when password does not meet security requirements
       * @extends Error
       */
      export class WeakPasswordError extends Error {
        constructor() {
          super('Password must be at least 8 characters long and contain uppercase, lowercase, number and special character')
          this.name = 'WeakPasswordError'
        }
      }
    validation_script: |
      echo "🔍 Running lint check..."
      yarn lint
      if [ $? -ne 0 ]; then
        echo "❌ LINT FAILED - Attempting auto-fix..."
        yarn lint --fix
        if [ $? -ne 0 ]; then
          echo "❌ AUTO-FIX FAILED - Manual intervention required"
          echo "📋 Run 'yarn lint' to see remaining errors"
          exit 1
        fi
        echo "✅ Lint errors auto-fixed, validating again..."
        yarn lint
        if [ $? -ne 0 ]; then
          echo "❌ LINT STILL FAILING - Manual fixes needed"
          exit 1
        fi
      fi
      echo "✅ Lint passed"

      echo "🧪 Running tests with coverage..."
      yarn test --coverage
      if [ $? -ne 0 ]; then
        echo "❌ TESTS FAILED - Running specific test to identify issue..."
        yarn test --run --reporter=verbose
        echo "❌ Tests must be fixed manually"
        echo "📋 Check the test output above for details"
        exit 1
      fi
      echo "✅ Tests passed"

      echo "📦 Staging changes..."
      git add .

      echo "💾 Creating commit..."
      git commit -m "feat(user-registration): add weak-password domain error"
      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi
      echo "✅ Successfully committed"
  - id: create-error-email-send-failed
    type: create_file
    description: Create email-send-failed domain error
    status: PENDING
    rlhf_score: null
    execution_log: ""
    references:
      - type: external_pattern
        source: context7
        query: email notification error handling
        url: https://github.com/mehdihadeli/awesome-software-architecture
        description: Error handling pattern for email notification failures
    path: src/features/user-registration/domain/errors/email-send-failed.ts
    template: |
      /**
       * Error thrown when email sending fails
       * @extends Error
       */
      export class EmailSendFailedError extends Error {
        constructor() {
          super('Failed to send email notification')
          this.name = 'EmailSendFailedError'
        }
      }
    validation_script: >
      echo "🔍 Running lint check..."

      yarn lint

      if [ $? -ne 0 ]; then
        echo "❌ LINT FAILED - Attempting auto-fix..."
        yarn lint --fix
        if [ $? -ne 0 ]; then
          echo "❌ AUTO-FIX FAILED - Manual intervention required"
          echo "📋 Run 'yarn lint' to see remaining errors"
          exit 1
        fi
        echo "✅ Lint errors auto-fixed, validating again..."
        yarn lint
        if [ $? -ne 0 ]; then
          echo "❌ LINT STILL FAILING - Manual fixes needed"
          exit 1
        fi
      fi

      echo "✅ Lint passed"


      echo "🧪 Running tests with coverage..."

      yarn test --coverage

      if [ $? -ne 0 ]; then
        echo "❌ TESTS FAILED - Running specific test to identify issue..."
        yarn test --run --reporter=verbose
        echo "❌ Tests must be fixed manually"
        echo "📋 Check the test output above for details"
        exit 1
      fi

      echo "✅ Tests passed"


      echo "📦 Staging changes..."

      git add .


      echo "💾 Creating commit..."

      git commit -m "feat(user-registration): add email-send-failed domain
      error"

      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi

      echo "✅ Successfully committed"
  - id: create-test-helper-register-user
    type: create_file
    description: Create mock for RegisterUser use case
    status: PENDING
    rlhf_score: null
    execution_log: ""
    references:
      - type: internal_code_analysis
        source: serena
        tool: read
        query: mock-get-user-profile-use-case.ts
        description: Following existing mock pattern from user-profile feature
    path: src/features/user-registration/domain/test/mock-register-user-use-case.ts
    template: >
      import { vi } from 'vitest'

      import type { RegisterUserUseCase, RegisterUserInput, RegisterUserOutput }
      from '../use-cases/register-user'


      /**
       * Creates a mock instance of RegisterUserInput
       * @returns Mock input for testing
       */
      export const mockRegisterUserInput = (): RegisterUserInput => ({
        email: 'newuser@example.com',
        password: 'SecurePass123!',
        firstName: 'Jane',
        lastName: 'Smith'
      })


      /**
       * Creates a mock instance of RegisterUserOutput
       * @returns Mock output for testing
       */
      export const mockRegisterUserOutput = (): RegisterUserOutput => ({
        id: 'user-456',
        email: 'newuser@example.com',
        firstName: 'Jane',
        lastName: 'Smith',
        createdAt: new Date('2024-01-01T00:00:00Z')
      })


      /**
       * Creates a mock instance of RegisterUserUseCase
       * @returns Mocked use case with vitest functions
       */
      export const mockRegisterUserUseCase = (): RegisterUserUseCase => ({
        execute: vi.fn()
      })
    validation_script: >
      echo "🔍 Running lint check..."

      yarn lint

      if [ $? -ne 0 ]; then
        echo "❌ LINT FAILED - Attempting auto-fix..."
        yarn lint --fix
        if [ $? -ne 0 ]; then
          echo "❌ AUTO-FIX FAILED - Manual intervention required"
          echo "📋 Run 'yarn lint' to see remaining errors"
          exit 1
        fi
        echo "✅ Lint errors auto-fixed, validating again..."
        yarn lint
        if [ $? -ne 0 ]; then
          echo "❌ LINT STILL FAILING - Manual fixes needed"
          exit 1
        fi
      fi

      echo "✅ Lint passed"


      echo "🧪 Running tests with coverage..."

      yarn test --coverage

      if [ $? -ne 0 ]; then
        echo "❌ TESTS FAILED - Running specific test to identify issue..."
        yarn test --run --reporter=verbose
        echo "❌ Tests must be fixed manually"
        echo "📋 Check the test output above for details"
        exit 1
      fi

      echo "✅ Tests passed"


      echo "📦 Staging changes..."

      git add .


      echo "💾 Creating commit..."

      git commit -m "test(user-registration): add register-user use case test
      helpers"

      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi

      echo "✅ Successfully committed"
  - id: create-test-helper-send-welcome-email
    type: create_file
    description: Create mock for SendWelcomeEmail use case
    status: PENDING
    rlhf_score: null
    execution_log: ""
    references:
      - type: internal_code_analysis
        source: serena
        tool: read
        query: mock-get-user-profile-use-case.ts
        description: Following existing mock pattern from user-profile feature
    path: src/features/user-registration/domain/test/mock-send-welcome-email-use-case.ts
    template: >
      import { vi } from 'vitest'

      import type { SendWelcomeEmailUseCase, SendWelcomeEmailInput,
      SendWelcomeEmailOutput } from '../use-cases/send-welcome-email'


      /**
       * Creates a mock instance of SendWelcomeEmailInput
       * @returns Mock input for testing
       */
      export const mockSendWelcomeEmailInput = (): SendWelcomeEmailInput => ({
        userId: 'user-456',
        email: 'newuser@example.com',
        firstName: 'Jane'
      })


      /**
       * Creates a mock instance of SendWelcomeEmailOutput
       * @returns Mock output for testing
       */
      export const mockSendWelcomeEmailOutput = (): SendWelcomeEmailOutput => ({
        emailId: 'email-789',
        sentAt: new Date('2024-01-01T00:01:00Z'),
        status: 'sent'
      })


      /**
       * Creates a mock instance of SendWelcomeEmailUseCase
       * @returns Mocked use case with vitest functions
       */
      export const mockSendWelcomeEmailUseCase = (): SendWelcomeEmailUseCase =>
      ({
        execute: vi.fn()
      })
    validation_script: >
      echo "🔍 Running lint check..."

      yarn lint

      if [ $? -ne 0 ]; then
        echo "❌ LINT FAILED - Attempting auto-fix..."
        yarn lint --fix
        if [ $? -ne 0 ]; then
          echo "❌ AUTO-FIX FAILED - Manual intervention required"
          echo "📋 Run 'yarn lint' to see remaining errors"
          exit 1
        fi
        echo "✅ Lint errors auto-fixed, validating again..."
        yarn lint
        if [ $? -ne 0 ]; then
          echo "❌ LINT STILL FAILING - Manual fixes needed"
          exit 1
        fi
      fi

      echo "✅ Lint passed"


      echo "🧪 Running tests with coverage..."

      yarn test --coverage

      if [ $? -ne 0 ]; then
        echo "❌ TESTS FAILED - Running specific test to identify issue..."
        yarn test --run --reporter=verbose
        echo "❌ Tests must be fixed manually"
        echo "📋 Check the test output above for details"
        exit 1
      fi

      echo "✅ Tests passed"


      echo "📦 Staging changes..."

      git add .


      echo "💾 Creating commit..."

      git commit -m "test(user-registration): add send-welcome-email use case
      test helpers"

      if [ $? -ne 0 ]; then
        echo "❌ COMMIT FAILED - Checking git status..."
        git status
        echo "📋 Review the status above and fix any issues"
        exit 1
      fi

      echo "✅ Successfully committed"
troubleshooting:
  lint_fails:
    - DO NOT commit - Fix all lint errors first
    - Check for unused imports
    - Verify proper TypeScript types
    - Ensure no console.log statements
    - Run yarn lint --fix to auto-fix when possible
  tests_fail:
    - DO NOT commit - All tests must pass
    - Check if mocks match the actual interfaces
    - Verify Input/Output types are correct
    - Ensure test coverage meets requirements
    - "Run specific test: yarn test [test-file-path]"
  typescript_fails:
    - Check all type definitions match
    - Ensure no missing imports
    - Verify interface implementations are complete
    - Run yarn tsc --noEmit to check types
refactoring:
  before_refactoring: |
    # Check current status and differences
    echo "📊 Checking current changes..."
    git status
    git diff

    # Ensure clean working directory
    echo "✅ Saving current work..."
    git stash save "WIP: before refactoring"

    # Create refactoring branch
    echo "🌿 Creating refactor branch..."
    git checkout -b refactor/[feature-name]

    # Run tests to ensure starting point is stable
    echo "🧪 Validating current state..."
    yarn test --run
    if [ $? -ne 0 ]; then
      echo "❌ Tests failing before refactor - fix first!"
      exit 1
    fi
    echo "✅ Ready to refactor"
  during_refactoring: |
    # After each change, check what was modified
    echo "🔍 Reviewing changes..."
    git diff --stat
    git diff

    # Validate the change
    yarn lint && yarn test --run

    # Commit atomically
    git add -p  # Interactive staging to commit only related changes
    git commit -m "refactor([feature-name]): [specific change description]"

    # Show what was changed in the last commit
    git show --stat
  common_scenarios:
    - name: Splitting a use case
      wrong_example: >
        interface CreateUserAndSendEmailUseCase {
          execute: (input: CreateUserAndSendEmailInput) => Promise<CreateUserAndSendEmailOutput>
        }
      correct_example: >
        interface CreateUserUseCase {
          execute: (input: CreateUserInput) => Promise<CreateUserOutput>
        }

        interface SendWelcomeEmailUseCase {
          execute: (input: SendWelcomeEmailInput) => Promise<SendWelcomeEmailOutput>
        }
      script: |
        # Split the combined use case into separate files
        # Update all imports and references
        # Run tests after each change
    - name: Renaming for clarity
      script: >
        # 1. See all occurrences before changing

        echo "🔍 Finding all occurrences of [OldName]..."

        grep -r "[OldName]" src/features/[feature-name]/


        # 2. Perform the rename

        echo "✏️ Renaming [OldName] to [NewName]..."

        # Update files...


        # 3. Review the changes

        echo "📊 Reviewing rename changes..."

        git diff --word-diff


        # 4. Validate nothing broke

        yarn lint && yarn test --run


        # 5. Check if rename is complete

        echo "🔍 Ensuring no [OldName] remains..."

        grep -r "[OldName]" src/features/[feature-name]/

        if [ $? -eq 0 ]; then
          echo "⚠️ Warning: [OldName] still found in some files"
        fi


        # 6. Commit the rename

        git add .

        git commit -m "refactor([feature-name]): rename [OldName] to [NewName]
        for clarity"


        # 7. Show the final diff

        git show --stat
recovery:
  accidental_commit: |
    # Revert the last commit but keep changes
    git reset --soft HEAD~1

    # Fix the issues
    # ... make corrections ...

    # Re-run validation
    yarn lint
    yarn test --coverage

    # Commit again with fixed code
    git add .
    git commit -m "[original message] - fixed"
  domain_polluted: >
    # 1. Identify violations in domain

    echo "🔍 Checking for domain violations..."

    git diff src/features/[feature-name]/domain/


    # Check for forbidden patterns

    echo "⚠️ Checking for business logic..."

    grep -r "class.*{.*calculate\|validate\|process"
    src/features/[feature-name]/domain/


    echo "⚠️ Checking for external dependencies..."

    grep -r "import.*axios\|fetch\|http" src/features/[feature-name]/domain/


    echo "⚠️ Checking for console logs..."

    grep -r "console\." src/features/[feature-name]/domain/


    # 2. Show what needs to be moved

    git diff src/features/[feature-name]/domain/ --name-only


    # 3. After moving code to proper layers

    echo "✅ Validating domain is clean..."

    yarn lint

    yarn test --run


    # 4. Commit the cleanup

    git add .

    git diff --staged --stat

    git commit -m "refactor([feature-name]): remove business logic from domain
    layer"
ai_guidelines:
  - "Always validate before committing: Run lint first, Run tests second, Only
    commit if both pass"
  - "If generation fails: Identify the specific error, Fix only that error,
    Re-run validation, Do NOT proceed until fixed"
  - "Follow the principle: One use case = One file = One responsibility"
  - If tempted to add "And" in a use case name, split it
  - "When in doubt: Choose simplicity over complexity, Split rather than
    combine, Ask for clarification rather than assume"
  - 'MUST generate different case styles from the input names (e.g., "Add Item
    To Cart" becomes: PascalCase=AddItemToCart, kebab-case=add-item-to-cart,
    lower case=add item to cart).'
  - MUST replace ALL placeholder variables (like __FEATURE_NAME_KEBAB_CASE__)
    with actual values
  - MUST NOT leave any placeholder variables in the final implementation
  - MUST NOT replace any [placeholders] found inside documentation sections like
    refactoring or recovery
  - MUST use vitest, NOT jest
  - MUST follow all domain rules - no business logic, no external dependencies
evaluation:
  final_status: PENDING
  final_rlhf_score: null
  reviewer_summary: |
    - What went well:
      - ...
    - Areas for improvement:
      - ...
  template_improvement_suggestions:
    - target_template: domain.template.yaml
      target_step_id: create-use-case-register-user
      suggestion: The generated mock data was too simplistic. The template should be
        updated to include more realistic data generation.
      priority: medium
