name: CLI Package CI

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'core/**'
      - 'bin/**'
      - 'package.json'
      - '.github/workflows/cli-ci.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'core/**'
      - 'bin/**'
      - 'package.json'
      - '.github/workflows/cli-ci.yml'

jobs:
  test:
    name: Test CLI Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --include=optional

      - name: Build templates
        run: npm run templates:build

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

  quality:
    name: Code Quality & Architecture
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Validate Architecture with ESLint Boundaries
        run: |
          echo "ðŸ“‹ ESLint Boundaries Validation"
          echo "================================"
          npm run lint
        continue-on-error: false

      - name: Validate Architecture with Dependency Cruiser
        run: |
          echo "ðŸ“‹ Dependency Cruiser Validation"
          echo "================================="
          npm run arch:validate
        continue-on-error: false

      - name: Install Graphviz
        run: sudo apt-get update && sudo apt-get install -y graphviz
        continue-on-error: true

      - name: Generate Architecture Graph
        run: |
          echo "ðŸ“Š Generating Architecture Graph"
          echo "================================="
          npm run arch:graph
        continue-on-error: true

      - name: Upload Architecture Graph
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: architecture-graph
          path: docs/architecture-graph.svg
          if-no-files-found: ignore

      - name: RLHF Score Check
        run: |
          echo "ðŸ“Š RLHF Score Tracking"
          echo "======================"
          echo "Target: +1 or +2 for all generated code"
          echo "Scores will be tracked after code generation"